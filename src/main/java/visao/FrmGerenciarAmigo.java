package visao;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Amigo;
import modelo.Emprestimo;
import javax.swing.*;
import service.AmigoService;
import service.EmprestimoService;

public class FrmGerenciarAmigo extends javax.swing.JFrame {

    private transient AmigoService amigoService = new AmigoService();

    private String mensagem;

    public FrmGerenciarAmigo() {
        initComponents();
        this.carregaListaAmigo();
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setVisible(true);
    }

    public String getMensagem() {
        return mensagem;
    }

    public void setMensagem(String mensagem) {
        this.mensagem = mensagem;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAmigos = new javax.swing.JTable();
        labelId = new javax.swing.JLabel();
        labelNome = new javax.swing.JLabel();
        textNome = new javax.swing.JTextField();
        labelTelefone = new javax.swing.JLabel();
        textTelefone = new javax.swing.JTextField();
        buttonApagar = new javax.swing.JButton();
        buttonModificar = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        labelIid = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerenciador de Amigos");

        jTableAmigos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nome", "Telefone"
            }
        ));
        jTableAmigos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAmigosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAmigos);

        labelId.setText("ID:");

        labelNome.setText("Nome:");

        labelTelefone.setText("Telefone:");

        buttonApagar.setText("Apagar");
        buttonApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonApagarActionPerformed(evt);
            }
        });

        buttonModificar.setText("Modificar");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        labelIid.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelTelefone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textTelefone))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelNome)
                        .addGap(18, 18, 18)
                        .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelIid)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(137, Short.MAX_VALUE)
                .addComponent(buttonApagar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBCancelar)
                .addGap(22, 22, 22))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelId)
                    .addComponent(labelIid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNome)
                    .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTelefone)
                    .addComponent(textTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonApagar)
                    .addComponent(buttonModificar)
                    .addComponent(jBCancelar))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        //Libera todos os recurso da interface gr√°fica
        this.dispose();
        if (evt == null) return;

    }//GEN-LAST:event_jBCancelarActionPerformed

    public void simularCliqueCancelar() {

        jBCancelarActionPerformed(null);
    }

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        if (evt == null) return;

        try {
            int id = Integer.parseInt(jTableAmigos.getValueAt(this.jTableAmigos.getSelectedRow(), 0).toString());
            String nome = "";
            String telefone = "";
            if (textNome.getText().length() < 3) {
                throw new Erro("Nome deve conter pelo menos 3 caracteres, tente novamente.");
            } else {
                nome = (textNome.getText());

            }
            if (textTelefone.getText().length() < 8) {
                throw new Erro("Telefone deve conter pelo menos 8 caracteres, tente novamente.");
            } else {
                telefone = (textTelefone.getText());

            }

            if (amigoService.updateAmigoDB(id, nome, telefone)) {
                mostrarMensagem("Amigo atualizado com sucesso.");
                labelIid.setVisible(false);
                textNome.setText("");
                textTelefone.setText("");
                this.carregaListaAmigo();
            }
        } catch (Erro erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }
    }//GEN-LAST:event_buttonModificarActionPerformed

    private void jTableAmigosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAmigosMouseClicked
        if (evt == null) return;

        if (this.jTableAmigos.getSelectedRow() != -1) {
            labelIid.setText(jTableAmigos.getValueAt(this.jTableAmigos.getSelectedRow(), 0).toString());
            labelIid.setVisible(true);
            textNome.setText(jTableAmigos.getValueAt(this.jTableAmigos.getSelectedRow(), 1).toString());
            textTelefone.setText(jTableAmigos.getValueAt(this.jTableAmigos.getSelectedRow(), 2).toString());
        }
    }//GEN-LAST:event_jTableAmigosMouseClicked

    private void buttonApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonApagarActionPerformed
        if (evt == null) return;

        int conf = 0;
        EmprestimoService emp = new EmprestimoService();
        List<Emprestimo> listaEmprestimo = emp.listaEmprestimo();
        int idEmprestimo = 0;
        conf = confirmarApagarAmigo();
        if (conf == 0) {

            for (int i = 0; i < listaEmprestimo.size(); i++) {
                if (listaEmprestimo.get(i).getIDAmigo() == Integer.parseInt(labelIid.getText())) {
                    emp.deleteEmprestimoDB(listaEmprestimo.get(i).getIDEmprestimo());
                }
            }
            amigoService.deleteAmigoDB(Integer.parseInt(labelIid.getText()));
            labelIid.setVisible(false);
            textNome.setText("");
            textTelefone.setText("");
            this.carregaListaAmigo();
            mostrarMensagem("Amigo apagado com sucesso.");
        }

    }//GEN-LAST:event_buttonApagarActionPerformed
    public void carregaListaAmigo() {
        DefaultTableModel model = (DefaultTableModel) jTableAmigos.getModel();
        labelIid.setVisible(false);
        model.setNumRows(0);
        List<Amigo> listaAmigo = amigoService.listaAmigo();
        for (Amigo objeto : listaAmigo) {
            model.addRow(new Object[]{
                objeto.getIdAmigo(),
                objeto.getNomeAmigo(),
                objeto.getTelefone(),}
            );
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmGerenciarAmigo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FrmGerenciarAmigo().setVisible(true);
            });
            }

    protected int confirmarApagarAmigo() {
        return JOptionPane.showConfirmDialog(null, "Esta a√ß√£o tamb√©m apagar√° todos os empr√©stimos associados a este amigo, deseja continuar?");
    }

    public void mostrarMensagem(String mensagem) {
        JOptionPane.showMessageDialog(null, mensagem);
    }

    protected javax.swing.JTextField getJTFNome() {
        return this.textNome;  // acesso direto porque est√° dentro da classe
    }

    protected javax.swing.JTextField getJTFTelefone() {
        return this.textTelefone;
    }

    protected javax.swing.JButton getJBModificar() {
        return this.buttonModificar;
    }

    protected javax.swing.JButton getJBApagar() {
        return this.buttonApagar;
    }

    protected javax.swing.JTable getJTableAmigos() {
        return this.jTableAmigos;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonApagar;
    private javax.swing.JButton buttonModificar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAmigos;
    private javax.swing.JLabel labelId;
    private javax.swing.JLabel labelIid;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelTelefone;
    private javax.swing.JTextField textNome;
    private javax.swing.JTextField textTelefone;
    // End of variables declaration//GEN-END:variables

}
