package visao;

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Emprestimo;
import modelo.Ferramenta;
import service.EmprestimoService;
import service.FerramentaService;

public class FrmGerenciarFerramenta extends javax.swing.JFrame {

    private transient FerramentaService ferramentaService = new FerramentaService();
    private String mensagem;

    public FrmGerenciarFerramenta() {
        initComponents();
        this.CarregaListaFerramenta();
    }

    public String getMensagem() {
        return mensagem;
    }

    public void setMensagem(String mensagem) {
        this.mensagem = mensagem;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAmigos = new javax.swing.JTable();
        JLID = new javax.swing.JLabel();
        JLNome = new javax.swing.JLabel();
        JTFNome = new javax.swing.JTextField();
        JLMarca = new javax.swing.JLabel();
        JTFMarca = new javax.swing.JTextField();
        JLCustoFerramenta = new javax.swing.JLabel();
        JTFCustoFerramenta = new javax.swing.JTextField();
        JLDisponivel = new javax.swing.JLabel();
        JBApagar = new javax.swing.JButton();
        JBModificar = new javax.swing.JButton();
        JBCancelar = new javax.swing.JButton();
        JLIid = new javax.swing.JLabel();
        JLCustoTotal = new javax.swing.JLabel();
        labelDisponivel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerenciador de Ferramentas");

        jTableAmigos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Marca", "Custo", "Disponível"
            }
        ));
        jTableAmigos.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAmigosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAmigos);

        JLID.setText("ID:");

        JLNome.setText("Nome:");

        JLMarca.setText("Marca:");

        JLCustoFerramenta.setText("Custo:");

        JLDisponivel.setText("Disponível:");

        JBApagar.setText("Apagar");
        JBApagar.addActionListener(this::JBApagarActionPerformed);

        JBModificar.setText("Modificar");
        JBModificar.addActionListener(this::JBModificarActionPerformed);

        JBCancelar.setText("Cancelar");
        JBCancelar.addActionListener(this::JBCancelarActionPerformed);

        JLIid.setText("0");

        JLCustoTotal.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        JLCustoTotal.setText("Custo total");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JLNome)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JLID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JLIid)))
                        .addGap(156, 156, 156)
                        .addComponent(JLCustoTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(JLCustoFerramenta)
                                            .addComponent(JLMarca))
                                        .addGap(28, 28, 28)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(JTFMarca, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                            .addComponent(JTFCustoFerramenta, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(JLDisponivel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(labelDisponivel))
                                    .addComponent(JTFNome, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(239, 239, 239))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(JBApagar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JBModificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JBCancelar)
                                .addContainerGap())))))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLID)
                    .addComponent(JLIid)
                    .addComponent(JLCustoTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLNome)
                    .addComponent(JTFNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTFMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JLMarca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTFCustoFerramenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JLCustoFerramenta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLDisponivel)
                    .addComponent(labelDisponivel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBApagar)
                    .addComponent(JBModificar)
                    .addComponent(JBCancelar))
                .addGap(7, 7, 7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBCancelarActionPerformed
        //Libera todos os recurso da interface gráfica
        if (evt == null) return;

        this.dispose();
    }//GEN-LAST:event_JBCancelarActionPerformed

    private void jTableAmigosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAmigosMouseClicked
        if (evt == null) return;

        if (this.jTableAmigos.getSelectedRow() != -1) {
            JLIid.setText(jTableAmigos.getValueAt(this.jTableAmigos.getSelectedRow(), 0).toString());
            JLIid.setVisible(true);
            JTFNome.setText(jTableAmigos.getValueAt(this.jTableAmigos.getSelectedRow(), 1).toString());
            JTFMarca.setText(jTableAmigos.getValueAt(this.jTableAmigos.getSelectedRow(), 2).toString());
            JTFCustoFerramenta.setText(jTableAmigos.getValueAt(this.jTableAmigos.getSelectedRow(), 3).toString());
            labelDisponivel.setText(jTableAmigos.getValueAt(this.jTableAmigos.getSelectedRow(), 4).toString());

        }
    }//GEN-LAST:event_jTableAmigosMouseClicked

    private void JBModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBModificarActionPerformed
        if (evt == null) return;

        try {
            int id = Integer.parseInt(jTableAmigos.getValueAt(this.jTableAmigos.getSelectedRow(), 0).toString());
            String nome = "";
            String marca = "";
            double custo = 0;
            if (JTFNome.getText().length() < 2) {
                throw new Erro("Nome deve conter pelo menos 2 caracteres, tente novamente.");
            } else {
                nome = (JTFNome.getText());

            }
            if (JTFMarca.getText().length() < 2) {
                throw new Erro("Marca deve conter pelo menos 2 caracteres, tente novamente.");
            } else {
                marca = (JTFMarca.getText());

            }
            if (Double.parseDouble(JTFCustoFerramenta.getText()) <= 0) {
                throw new Erro("Custo deve ser maior que 0, tente novamente.");
            } else {
                custo = (Double.parseDouble(JTFCustoFerramenta.getText()));

            }
            if (ferramentaService.updateFerramentaDB(id, nome, marca, custo)) {
                mostrarMensagem("Ferramenta atualizada com sucesso.");
                JLIid.setVisible(false);
                JTFMarca.setText("");
                JTFNome.setText("");
                JTFCustoFerramenta.setText("");
                labelDisponivel.setText("");
                this.CarregaListaFerramenta();
            }
        } catch (Erro erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }
    }//GEN-LAST:event_JBModificarActionPerformed

    private void JBApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBApagarActionPerformed
        if (evt == null) return;

        int conf = 0;
        EmprestimoService emp = new EmprestimoService();
        List<Emprestimo> listaEmprestimo = emp.listaEmprestimo();
        int idEmprestimo = 0;
        conf = confirmarApagarFerramenta();
        if (conf == 0) {

            for (int i = 0; i < listaEmprestimo.size(); i++) {
                if (listaEmprestimo.get(i).getIDFerramenta() == Integer.parseInt(JLIid.getText())) {
                    emp.deleteEmprestimoDB(listaEmprestimo.get(i).getIDEmprestimo());
                }
            }
            ferramentaService.deleteFerramentaDB(Integer.parseInt(JLIid.getText()));
            JLIid.setVisible(false);
            JTFMarca.setText("");
            JTFNome.setText("");
            JTFCustoFerramenta.setText("");
            labelDisponivel.setText("");
            this.CarregaListaFerramenta();
            mostrarMensagem("Ferramenta apagada com sucesso.");
        }

    }//GEN-LAST:event_JBApagarActionPerformed
    public void CarregaListaFerramenta() {
        DefaultTableModel model = (DefaultTableModel) jTableAmigos.getModel();
        JLIid.setVisible(false);
        double som = 0;
        DecimalFormat df = new DecimalFormat("0.00");
        model.setNumRows(0);
        List<Ferramenta> listaFerramenta = ferramentaService.listaFerramenta();
        for (Ferramenta objeto : listaFerramenta) {
            model.addRow(new Object[]{
                objeto.getIdFerramenta(),
                objeto.getNomeFerramenta(),
                objeto.getMarcaFerramenta(),
                objeto.getCustoFerramenta(),
                ferramentaService.getDisponivel(objeto.getIdFerramenta()),}
            );
            som += objeto.getCustoFerramenta();
        }
        JLCustoTotal.setText("Custo total: R$" + df.format(som));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmGerenciarFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmGerenciarFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmGerenciarFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmGerenciarFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new FrmGerenciarFerramenta().setVisible(true));

    }

    protected int confirmarApagarFerramenta() {
        return JOptionPane.showConfirmDialog(null, "Esta ação também apagará todos os empréstimos associados a este Ferramenta, deseja continuar?");
    }

    public void mostrarMensagem(String mensagem) {
        JOptionPane.showMessageDialog(null, mensagem);
    }

    protected javax.swing.JTextField getJTFNome() {
        return this.JTFNome;  // acesso direto porque está dentro da classe
    }

    protected javax.swing.JTextField getJTFCustoFerramenta() {
        return this.JTFCustoFerramenta;
    }

    protected javax.swing.JTextField getJTFMarca() {
        return this.JTFMarca;
    }

    protected javax.swing.JButton getJBModificar() {
        return this.JBModificar;
    }

    protected javax.swing.JButton getJBApagar() {
        return this.JBApagar;
    }

    protected javax.swing.JTable getJTableAmigos() {
        return this.jTableAmigos;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBApagar;
    private javax.swing.JButton JBCancelar;
    private javax.swing.JButton JBModificar;
    private javax.swing.JLabel JLCustoFerramenta;
    private javax.swing.JLabel JLCustoTotal;
    private javax.swing.JLabel JLDisponivel;
    private javax.swing.JLabel JLID;
    private javax.swing.JLabel JLIid;
    private javax.swing.JLabel JLMarca;
    private javax.swing.JLabel JLNome;
    private javax.swing.JTextField JTFCustoFerramenta;
    private javax.swing.JTextField JTFMarca;
    private javax.swing.JTextField JTFNome;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAmigos;
    private javax.swing.JLabel labelDisponivel;
    // End of variables declaration//GEN-END:variables
}
